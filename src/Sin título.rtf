{\rtf1\ansi\ansicpg1252\cocoartf2513
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs28 \cf0 THREE-TIER system architechture: divides the application in three different tiers. Similar to MVC software architecture.\
\
	Application Tier: process information collected in the presentation tier.\
	Data Tier:	Stores data (SQLite, etc.)\
\
LAYER vs TIER:\
\
	Layer refers to a functional division of the software\
	Tier refers to a functional division of the software that runs on infrastructure.\
\
TWO-TIER: original client-server architechture. Presentation and Application tiers are combined in one only tier.\
\
MICRO-SERVICE BASED ARCHITECTURE: different micro-services work together (each on different tasks) to build a functional application. PROBLEM: some micro-services get more job (desbalanceo de carga), which suppose an inconvenient for real time applications.\
\
LAMBDA ARCHITECTURE:\
\
	EVENT-SOURCING: every change of our application should be capture as consecutive events that modified it. We don\'92t save changes but the operations that made those changes possible. Events are not mutable objects (you can not modify an event).\
\
Service oriented architechture(*)\
\
Web service: SOAP -> like using an envelope. Mora bandwidth required.}